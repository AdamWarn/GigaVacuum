amcl:
  ros__parameters:
    use_sim_time: false
    robot_radius: 0.2
    laser_min_range: 0.05
    laser_max_range: 10.0
    max_particles: 1000
    min_particles: 500

global_costmap:
  ros__parameters:
    update_frequency: 10.0
    robot_radius: 0.2
    obstacle_range: 2.5
    inflation_radius: 0.3

local_costmap:
  ros__parameters:
    update_frequency: 10.0
    robot_radius: 0.2
    inflation_radius: 0.3
    obstacle_range: 1.5

planner_server:
  ros__parameters:
    expected_planner_frequency: 5.0
    planner_plugin: "GridBasedPlanner"

controller_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 10.0
    min_velocity_x: 0.1
    max_velocity_x: 0.5
    max_velocity_y: 0.0
    min_velocity_theta: 0.1
    max_velocity_theta: 1.5
    controller_plugins: ["FollowPath"]

    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      critics: ["GoalDistCritic", "PathAlignCritic", "BaseObstacleCritic"]
      GoalDistCritic:
        scale: 1.0
      PathAlignCritic:
        scale: 2.0
      BaseObstacleCritic:
        scale: 0.5

behavior_server:
  ros__parameters:
    behavior_tree: "navigate_w_replanning_and_recovery.xml"

collision_monitor:
  ros__parameters:
    use_sim_time: false
    observation_sources: ["scan"]

    scan:
      topic: /scan  # Ensure this topic matches your LiDAR's topic
      max_obstacle_height: 2.0
      
      obstacle_range: 2.5
     

    polygons: ["PolygonStop", "PolygonSlow"]
    PolygonStop:
      type: "polygon"
      points: "[[0.4, 0.3], [0.4, -0.3], [0.0, -0.3], [0.0, 0.3]]"
      action_type: "stop"
      min_points: 4  # max_points: 3 for Humble
      visualize: True
      polygon_pub_topic: "polygon_stop"
    PolygonSlow:
      type: "polygon"
      points: "[[0.6, 0.4], [0.6, -0.4], [0.0, -0.4], [0.0, 0.4]]"
      action_type: "slowdown"
      min_points: 4  # max_points: 3 for Humble
      slowdown_ratio: 0.3
      visualize: True
      polygon_pub_topic: "polygon_slowdown"

docking_server:
  ros__parameters:
    use_sim_time: false
    controller_frequency: 50.0
    # Use one of the available dock plugin names.
    dock_plugins: ["SimpleChargingDock"]

    # Configuration for the selected plugin.
    SimpleChargingDock:
      plugin: "opennav_docking::SimpleChargingDock"
      charging_timeout: 60.0            # Timeout in seconds
      dock_distance_threshold: 0.5      # Distance threshold (meters) for docking
      # You can add any additional parameters required by the plugin.
